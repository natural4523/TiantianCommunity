<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.sdju.soft.community.mapper.UserExtMapper">
  <resultMap id="BaseResultMap" type="cn.edu.sdju.soft.community.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Aug 21 11:08:49 CST 2019.
    -->
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ACCOUNT_ID" jdbcType="VARCHAR" property="accountId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="STATE" jdbcType="BIGINT" property="state" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="TOKEN" jdbcType="VARCHAR" property="token" />
    <result column="GMT_CREATE" jdbcType="BIGINT" property="gmtCreate" />
    <result column="GMT_MODIFIED" jdbcType="BIGINT" property="gmtModified" />
    <result column="BIO" jdbcType="VARCHAR" property="bio" />
    <result column="AVATAR_URL" jdbcType="VARCHAR" property="avatarUrl" />
  </resultMap>

  <select id="findByUsername" parameterType="cn.edu.sdju.soft.community.model.User" resultMap="BaseResultMap">
    select * from USER where username = #{username} and password = #{password}
  </select>

  <insert id="createUser" parameterType="cn.edu.sdju.soft.community.model.User" >
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="accountId != null">
        ACCOUNT_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="token != null">
        TOKEN,
      </if>
      <if test="gmtCreate != null">
        GMT_CREATE,
      </if>
      <if test="gmtModified != null">
        GMT_MODIFIED,
      </if>
      <if test="bio != null">
        BIO,
      </if>
      <if test="avatarUrl != null">
        AVATAR_URL,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="id != null">
      #{id,jdbcType=BIGINT},
    </if>
    <if test="accountId != null">
      #{accountId,jdbcType=VARCHAR},
    </if>
    <if test="name != null">
      #{name,jdbcType=VARCHAR},
    </if>
    <if test="token != null">
      #{token,jdbcType=VARCHAR},
    </if>
    <if test="gmtCreate != null">
      #{gmtCreate,jdbcType=BIGINT},
    </if>
    <if test="gmtModified != null">
      #{gmtModified,jdbcType=BIGINT},
    </if>
    <if test="bio != null">
      #{bio,jdbcType=VARCHAR},
    </if>
    <if test="avatarUrl != null">
      #{avatarUrl,jdbcType=VARCHAR},
    </if>
    <if test="username != null">
      #{username,jdbcType=VARCHAR},
    </if>
    <if test="password != null">
      #{password,jdbcType=VARCHAR},
    </if>
    <if test="state != null">
      #{state,jdbcType=BIGINT},
    </if>
    <if test="email != null">
      #{email,jdbcType=VARCHAR},
    </if>
    </trim>
  </insert>

  <select id="findListByUsername" parameterType="cn.edu.sdju.soft.community.model.User" resultMap="BaseResultMap">
    select * from USER where username = #{username}
  </select>

  <update id="freezeByUserId" parameterType="cn.edu.sdju.soft.community.model.User">
    update user
    set state = 0
    where ID = #{id}
  </update>

  <select id="findByUserId" parameterType="cn.edu.sdju.soft.community.model.User" resultMap="BaseResultMap">
    select * from USER where id = #{id}
  </select>

  <update id="unfreezeByUserId" parameterType="cn.edu.sdju.soft.community.model.User">
    update user
    set state = 1
    where ID = #{id}
  </update>

  <update id="editUser" parameterType="cn.edu.sdju.soft.community.model.User">
    update USER
    set name = #{name},email = #{email} , AVATAR_URL=#{avatarUrl}
    where id = #{id}
  </update>

  <select id="countFrozenUsers" parameterType="cn.edu.sdju.soft.community.model.User" resultType="java.lang.Integer">
    select count(*)
    from USER
    where state = 0
  </select>

  <select id="findFrozenUsers" parameterType="cn.edu.sdju.soft.community.model.User"  resultMap="BaseResultMap">
    select *
    from USER
    where state = 0
    limit #{offset},#{size}
  </select>

  <update id="editPassword" parameterType="cn.edu.sdju.soft.community.model.User">
    update USER
    set password = #{password}
    where id = #{id}
  </update>

  <select id="findByUsername1" parameterType="cn.edu.sdju.soft.community.model.User" resultMap="BaseResultMap">
    select * from USER where username = #{username}
  </select>

  <select id="findAvatarUrlById" parameterType="cn.edu.sdju.soft.community.model.User" resultType="java.lang.String">
    select AVATAR_URL
    from USER
    where ID = #{id}
  </select>

  <select id="checkName" parameterType="cn.edu.sdju.soft.community.model.User" resultMap="BaseResultMap">
    select *
    from USER
    where NAME = #{name}
  </select>
</mapper>